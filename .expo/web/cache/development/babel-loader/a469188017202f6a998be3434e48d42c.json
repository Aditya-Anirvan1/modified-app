{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Queue = function () {\n  function Queue() {\n    (0, _classCallCheck2.default)(this, Queue);\n    this.data = [];\n  }\n\n  (0, _createClass2.default)(Queue, [{\n    key: \"enqueue\",\n    value: function enqueue(item) {\n      this.data.push(item);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      if (!this.isEmpty) {\n        this.data.shift();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.data = [];\n    }\n  }, {\n    key: \"firstItem\",\n    get: function get() {\n      if (!this.isEmpty) {\n        return this.data[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.length;\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.size === 0;\n    }\n  }]);\n  return Queue;\n}();\n\nexports.default = Queue;","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/node_modules/react-native-dropdownalert/Queue.js"],"names":["Queue","data","item","push","isEmpty","shift","length","size"],"mappings":";;;;;;;;;;;IAAqBA,K;AACnB,mBAAc;AAAA;AACZ,SAAKC,IAAL,GAAY,EAAZ;AACD;;;;4BAaOC,I,EAAM;AACZ,WAAKD,IAAL,CAAUE,IAAV,CAAeD,IAAf;AACD;;;8BACS;AACR,UAAI,CAAC,KAAKE,OAAV,EAAmB;AACjB,aAAKH,IAAL,CAAUI,KAAV;AACD;AACF;;;4BACO;AACN,WAAKJ,IAAL,GAAY,EAAZ;AACD;;;wBAtBe;AACd,UAAI,CAAC,KAAKG,OAAV,EAAmB;AACjB,eAAO,KAAKH,IAAL,CAAU,CAAV,CAAP;AACD;;AACD,aAAO,IAAP;AACD;;;wBACU;AACT,aAAO,KAAKA,IAAL,CAAUK,MAAjB;AACD;;;wBACa;AACZ,aAAO,KAAKC,IAAL,KAAc,CAArB;AACD","sourcesContent":["export default class Queue {\n  constructor() {\n    this.data = [];\n  }\n  get firstItem() {\n    if (!this.isEmpty) {\n      return this.data[0];\n    }\n    return null;\n  }\n  get size() {\n    return this.data.length;\n  }\n  get isEmpty() {\n    return this.size === 0;\n  }\n  enqueue(item) {\n    this.data.push(item);\n  }\n  dequeue() {\n    if (!this.isEmpty) {\n      this.data.shift();\n    }\n  }\n  clear() {\n    this.data = [];\n  }\n}\n"]},"metadata":{},"sourceType":"script"}