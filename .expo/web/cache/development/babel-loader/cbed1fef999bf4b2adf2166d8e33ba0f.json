{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _reduxSaga = _interopRequireDefault(require(\"redux-saga\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _sagas = _interopRequireDefault(require(\"./sagas\"));\n\nvar _reducer = _interopRequireDefault(require(\"./reducer\"));\n\nvar _reduxPersist = require(\"redux-persist\");\n\nvar sagaMiddleware = (0, _reduxSaga.default)();\nvar persistConfig = {\n  key: 'root',\n  storage: _asyncStorage.default\n};\nvar middleWares = [sagaMiddleware];\nvar persistedReducer = (0, _reduxPersist.persistReducer)(persistConfig, _reducer.default);\nvar store = (0, _redux.createStore)(persistedReducer, _redux.applyMiddleware.apply(void 0, middleWares));\nvar persistor = (0, _reduxPersist.persistStore)(store);\nsagaMiddleware.run(_sagas.default);\nvar _default = {\n  store: store,\n  persistor: persistor\n};\nexports.default = _default;","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/app/redux/store.js"],"names":["sagaMiddleware","persistConfig","key","storage","AsyncStorage","middleWares","persistedReducer","rootReducer","store","applyMiddleware","persistor","run","rootSaga"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,cAAc,GAAG,yBAAvB;AACA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBC,EAAAA,OAAO,EAAEC;AAFS,CAAtB;AAKA,IAAMC,WAAW,GAAG,CAACL,cAAD,CAApB;AAGA,IAAMM,gBAAgB,GAAG,kCAAeL,aAAf,EAA8BM,gBAA9B,CAAzB;AAEA,IAAMC,KAAK,GAAG,wBAAYF,gBAAZ,EAA8BG,qCAAmBJ,WAAnB,CAA9B,CAAd;AACA,IAAIK,SAAS,GAAG,gCAAaF,KAAb,CAAhB;AACAR,cAAc,CAACW,GAAf,CAAmBC,cAAnB;eAEe;AAACJ,EAAAA,KAAK,EAALA,KAAD;AAAOE,EAAAA,SAAS,EAATA;AAAP,C","sourcesContent":["import { createStore, applyMiddleware } from \"redux\"\nimport createSagaMiddleware from \"redux-saga\"\nimport AsyncStorage from '@react-native-community/async-storage';  \nimport rootSaga from \"./sagas\"\nimport rootReducer from \"./reducer\"\nimport { persistStore, persistReducer } from 'redux-persist'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst persistConfig = {\n    key: 'root',\n    storage: AsyncStorage,\n    //blacklist:['cart'] //Add reducer if you don`t want to presist it\n  }\nconst middleWares = [sagaMiddleware];\n\n//1\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, applyMiddleware(...middleWares))\nlet persistor = persistStore(store)\nsagaMiddleware.run(rootSaga)\n\nexport default {store,persistor}"]},"metadata":{},"sourceType":"script"}