{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = CheckoutDelivery;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSizeMatters = require(\"react-native-size-matters\");\n\nvar _SelectAble = _interopRequireDefault(require(\"../../components/SelectAble\"));\n\nvar _MockData = require(\"../../utils/MockData\");\n\nvar _jsxFileName = \"/Users/adityaarirvan/Desktop/expo app/modified app/app/screens/Checkout/CheckoutDelivery.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction CheckoutDelivery(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(\"Standard Delivery\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      selectedAddress = _useState2[0],\n      setSelectedAddress = _useState2[1];\n\n  var onSelect = function onSelect(item) {\n    setSelectedAddress(item.label);\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      paddingVertical: (0, _reactNativeSizeMatters.scale)(20)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    data: _MockData.deliveryTypes,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return _react.default.createElement(_SelectAble.default, {\n        selected: selectedAddress === item.label,\n        onSelect: onSelect,\n        item: item,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 40\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/app/screens/Checkout/CheckoutDelivery.js"],"names":["CheckoutDelivery","navigation","selectedAddress","setSelectedAddress","onSelect","item","label","paddingVertical","deliveryTypes","index"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEe,SAASA,gBAAT,OAAwC;AAAA;;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAAA,kBACL,qBAAS,mBAAT,CADK;AAAA;AAAA,MAC5CC,eAD4C;AAAA,MAC3BC,kBAD2B;;AAEnD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAS;AACtBF,IAAAA,kBAAkB,CAAEE,IAAI,CAACC,KAAP,CAAlB;AACH,GAFD;;AAGF,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,mCAAM,EAAN;AAAlB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,qBAAD;AACE,IAAA,IAAI,EAAEC,uBADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAEH,IAAF,SAAEA,IAAF;AAAA,UAAQI,KAAR,SAAQA,KAAR;AAAA,aAAmB,6BAAC,mBAAD;AAAY,QAAA,QAAQ,EAAGP,eAAe,KAAKG,IAAI,CAACC,KAAhD;AAAwD,QAAA,QAAQ,EAAEF,QAAlE;AAA4E,QAAA,IAAI,EAAEC,IAAlF;AAAwF,QAAA,GAAG,EAAEI,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAQD","sourcesContent":["import React,{useState} from 'react';\nimport {View, Text, FlatList} from 'react-native';\nimport {scale} from 'react-native-size-matters'; \nimport SelectAble from '../../components/SelectAble'; \nimport {deliveryTypes} from '../../utils/MockData';\n\nexport default function CheckoutDelivery({navigation}) {\n    const [selectedAddress, setSelectedAddress] = useState(\"Standard Delivery\") \n    const onSelect = (item) =>{\n        setSelectedAddress( item.label)\n    }\n  return (\n    <View style={{paddingVertical: scale(20)}}>\n      <FlatList\n        data={deliveryTypes}\n        renderItem={({item, index}) => <SelectAble selected={ selectedAddress === item.label } onSelect={onSelect} item={item} key={index} />}\n      />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}