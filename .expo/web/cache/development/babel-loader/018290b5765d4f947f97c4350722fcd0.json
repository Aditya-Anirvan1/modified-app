{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = CustomInput;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _appColors = require(\"../../utils/appColors\");\n\nvar _reactNativeSizeMatters = require(\"react-native-size-matters\");\n\nvar _Label = _interopRequireDefault(require(\"../Label\"));\n\nvar _jsxFileName = \"/Users/adityaarirvan/Desktop/expo app/modified app/app/components/CustomInput/index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction CustomInput(_ref) {\n  var placeholder = _ref.placeholder,\n      value = _ref.value,\n      onChangeText = _ref.onChangeText,\n      secureTextEntry = _ref.secureTextEntry,\n      keyboardType = _ref.keyboardType,\n      InputStyle = _ref.InputStyle,\n      IconRight = _ref.IconRight,\n      IconLeft = _ref.IconLeft,\n      label = _ref.label,\n      containerStyle = _ref.containerStyle;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      focused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var onFocus = function onFocus() {\n    setFocused(!focused);\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, containerStyle, focused ? styles.activeBorder : styles.blurBorder],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, label && _react.default.createElement(_reactNative.View, {\n    style: {\n      paddingVertical: (0, _reactNativeSizeMatters.scale)(10)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Label.default, {\n    style: {\n      color: _appColors.appColors.darkGray\n    },\n    text: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, IconLeft && _react.default.createElement(IconLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    placeholder: placeholder,\n    value: value,\n    onChangeText: onChangeText,\n    secureTextEntry: secureTextEntry,\n    keyboardType: keyboardType,\n    style: [styles.input, InputStyle],\n    onBlur: onFocus,\n    onFocus: onFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), IconRight && _react.default.createElement(IconRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    backgroundColor: _appColors.appColors.white,\n    borderBottomWidth: (0, _reactNativeSizeMatters.scale)(0.4)\n  },\n  input: {\n    paddingVertical: (0, _reactNativeSizeMatters.scale)(10),\n    fontSize: (0, _reactNativeSizeMatters.scale)(14)\n  },\n  blurBorder: {\n    borderColor: _appColors.appColors.darkGray\n  },\n  activeBorder: {\n    borderColor: _appColors.appColors.primary,\n    borderBottomWidth: (0, _reactNativeSizeMatters.scale)(1)\n  }\n});","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/app/components/CustomInput/index.js"],"names":["CustomInput","placeholder","value","onChangeText","secureTextEntry","keyboardType","InputStyle","IconRight","IconLeft","label","containerStyle","focused","setFocused","onFocus","styles","container","activeBorder","blurBorder","paddingVertical","color","appColors","darkGray","flexDirection","justifyContent","alignItems","input","StyleSheet","create","backgroundColor","white","borderBottomWidth","fontSize","borderColor","primary"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACe,SAASA,WAAT,OAWZ;AAAA,MAVDC,WAUC,QAVDA,WAUC;AAAA,MATDC,KASC,QATDA,KASC;AAAA,MARDC,YAQC,QARDA,YAQC;AAAA,MAPDC,eAOC,QAPDA,eAOC;AAAA,MANDC,YAMC,QANDA,YAMC;AAAA,MALDC,UAKC,QALDA,UAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,cACC,QADDA,cACC;;AAAA,kBAC6B,qBAAS,KAAT,CAD7B;AAAA;AAAA,MACMC,OADN;AAAA,MACeC,UADf;;AAED,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAGA,SACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLG,MAAM,CAACC,SADF,EACYL,cADZ,EAELC,OAAO,GAAGG,MAAM,CAACE,YAAV,GAAyBF,MAAM,CAACG,UAFlC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGR,KAAK,IACJ,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACS,MAAAA,eAAe,EAAE,mCAAM,EAAN;AAAlB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,cAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAEC,qBAAUC;AAAlB,KAAd;AAA2C,IAAA,IAAI,EAAEZ,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,EAUE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACa,MAAAA,aAAa,EAAC,KAAf;AAAsBC,MAAAA,cAAc,EAAC,eAArC;AAAsDC,MAAAA,UAAU,EAAC;AAAjE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,QAAQ,IAAI,6BAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEA,6BAAC,sBAAD;AACE,IAAA,WAAW,EAAEP,WADf;AAEE,IAAA,KAAK,EAAEC,KAFT;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,eAAe,EAAEC,eALnB;AAME,IAAA,YAAY,EAAEC,YANhB;AAOE,IAAA,KAAK,EAAE,CAACS,MAAM,CAACW,KAAR,EAAenB,UAAf,CAPT;AAQE,IAAA,MAAM,EAAEO,OARV;AASE,IAAA,OAAO,EAAEA,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAaCN,SAAS,IAAI,6BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbd,CAVF,CADF;AA6BD;;AAED,IAAMO,MAAM,GAAGY,wBAAWC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AAMTa,IAAAA,eAAe,EAAER,qBAAUS,KANlB;AAOTC,IAAAA,iBAAiB,EAAE,mCAAM,GAAN;AAPV,GADoB;AAY/BL,EAAAA,KAAK,EAAE;AAGLP,IAAAA,eAAe,EAAE,mCAAM,EAAN,CAHZ;AAKLa,IAAAA,QAAQ,EAAE,mCAAM,EAAN;AALL,GAZwB;AAmB/Bd,EAAAA,UAAU,EAAE;AACVe,IAAAA,WAAW,EAAEZ,qBAAUC;AADb,GAnBmB;AAsB/BL,EAAAA,YAAY,EAAE;AACZgB,IAAAA,WAAW,EAAEZ,qBAAUa,OADX;AAEZH,IAAAA,iBAAiB,EAAE,mCAAM,CAAN;AAFP;AAtBiB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport {StyleSheet, Text, TextInput, View} from 'react-native';\nimport {appColors, shadow} from '../../utils/appColors';\nimport {scale} from 'react-native-size-matters';\nimport Label from '../Label';\nexport default function CustomInput({\n  placeholder,\n  value,\n  onChangeText,\n  secureTextEntry,\n  keyboardType,\n  InputStyle,\n  IconRight,\n  IconLeft,\n  label,\n  containerStyle\n}) {\n  const [focused, setFocused] = useState(false);\n  const onFocus = () => {\n    setFocused(!focused);\n  };\n  return (\n    <View\n      style={[\n        styles.container,containerStyle,\n        focused ? styles.activeBorder : styles.blurBorder,\n      ]}>\n      {label && (\n        <View style={{paddingVertical: scale(10)}}>\n          <Label style={{color: appColors.darkGray}} text={label} />\n        </View>\n      )}\n      <View style={{flexDirection:'row', justifyContent:'space-between', alignItems:'center'}}>\n          {IconLeft && <IconLeft />}\n      <TextInput\n        placeholder={placeholder}\n        value={value}\n         \n        onChangeText={onChangeText}\n        secureTextEntry={secureTextEntry}\n        keyboardType={keyboardType}\n        style={[styles.input, InputStyle]}\n        onBlur={onFocus}\n        onFocus={onFocus}\n      />\n      {IconRight && <IconRight />}\n      </View>\n    \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flexDirection: \"row\",\n    //paddingHorizontal: scale(10),\n    //margin: scale(5),\n    //height: scale(45),\n    // alignItems: \"center\",\n    backgroundColor: appColors.white,\n    borderBottomWidth: scale(0.4),\n    // borderRadius:scale(25),\n    // ...shadow\n  },\n  input: {\n    //backgroundColor:'red',\n    // height:scale(90),\n    paddingVertical: scale(10),\n    // flex: 1,\n    fontSize: scale(14),\n  },\n  blurBorder: {\n    borderColor: appColors.darkGray,\n  },\n  activeBorder: {\n    borderColor: appColors.primary,\n    borderBottomWidth: scale(1),\n  },\n});\n"]},"metadata":{},"sourceType":"script"}