{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = CheckBox;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSizeMatters = require(\"react-native-size-matters\");\n\nvar _appColors = require(\"../utils/appColors\");\n\nvar _jsxFileName = \"/Users/adityaarirvan/Desktop/expo app/modified app/app/components/CheckBox.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction CheckBox(_ref) {\n  var _onPress = _ref.onPress,\n      isChecked = _ref.isChecked;\n  return _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return _onPress && _onPress();\n    },\n    style: [{\n      borderRadius: (0, _reactNativeSizeMatters.scale)(15),\n      borderColor: _appColors.appColors.white,\n      height: (0, _reactNativeSizeMatters.scale)(25),\n      width: (0, _reactNativeSizeMatters.scale)(25)\n    }, isChecked ? styles.checked : styles.unChecked],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  });\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  checked: {\n    borderWidth: (0, _reactNativeSizeMatters.scale)(5),\n    backgroundColor: _appColors.appColors.primary,\n    borderColor: _appColors.appColors.white\n  },\n  unChecked: {\n    backgroundColor: _appColors.appColors.gray\n  }\n});","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/app/components/CheckBox.js"],"names":["CheckBox","onPress","isChecked","borderRadius","borderColor","appColors","white","height","width","styles","checked","unChecked","StyleSheet","create","borderWidth","backgroundColor","primary","gray"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEe,SAASA,QAAT,OAAwC;AAAA,MAArBC,QAAqB,QAArBA,OAAqB;AAAA,MAAZC,SAAY,QAAZA,SAAY;AAErD,SACE,6BAAC,sBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAO,IAAGA,QAAO,EAAvB;AAAA,KADX;AAEE,IAAA,KAAK,EAAE,CACL;AACEE,MAAAA,YAAY,EAAE,mCAAM,EAAN,CADhB;AAEEC,MAAAA,WAAW,EAAEC,qBAAUC,KAFzB;AAGEC,MAAAA,MAAM,EAAE,mCAAM,EAAN,CAHV;AAIEC,MAAAA,KAAK,EAAE,mCAAM,EAAN;AAJT,KADK,EAOLN,SAAS,GAAGO,MAAM,CAACC,OAAV,GAAoBD,MAAM,CAACE,SAP/B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD;;AAED,IAAMF,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,OAAO,EAAE;AACPI,IAAAA,WAAW,EAAE,mCAAM,CAAN,CADN;AAEPC,IAAAA,eAAe,EAAEV,qBAAUW,OAFpB;AAGPZ,IAAAA,WAAW,EAAEC,qBAAUC;AAHhB,GADsB;AAM/BK,EAAAA,SAAS,EAAE;AACTI,IAAAA,eAAe,EAAEV,qBAAUY;AADlB;AANoB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport {View, Text, Pressable, StyleSheet} from 'react-native';\nimport {scale} from 'react-native-size-matters';\nimport {appColors} from '../utils/appColors';\n\nexport default function CheckBox({onPress, isChecked}) {\n  //const [isChecked, setIsChecked] = useState(selected);\n  return (\n    <Pressable\n      onPress={() => onPress &&onPress()}\n      style={[\n        {\n          borderRadius: scale(15),\n          borderColor: appColors.white,\n          height: scale(25),\n          width: scale(25),\n        },\n        isChecked ? styles.checked : styles.unChecked,\n      ]}></Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  checked: {\n    borderWidth: scale(5),\n    backgroundColor: appColors.primary,\n    borderColor: appColors.white,\n  },\n  unChecked: {\n    backgroundColor: appColors.gray,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}