{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityaarirvan/Desktop/expo app/modified app/node_modules/react-native-stepper-ui/index.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar search = function search(keyName, myArray) {\n  var value = false;\n  myArray.map(function (val) {\n    if (val === keyName) {\n      value = true;\n    }\n  });\n  return value;\n};\n\nvar Stepper = function Stepper(props) {\n  var active = props.active,\n      content = props.content,\n      onBack = props.onBack,\n      onNext = props.onNext,\n      onFinish = props.onFinish,\n      wrapperStyle = props.wrapperStyle,\n      stepStyle = props.stepStyle,\n      stepTextStyle = props.stepTextStyle,\n      buttonStyle = props.buttonStyle,\n      buttonTextStyle = props.buttonTextStyle,\n      _props$showButton = props.showButton,\n      showButton = _props$showButton === void 0 ? true : _props$showButton;\n\n  var _useState = (0, _react.useState)([0]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var pushData = function pushData(val) {\n    setStep(function (prev) {\n      return [].concat((0, _toConsumableArray2.default)(prev), [val]);\n    });\n  };\n\n  var removeData = function removeData() {\n    setStep(function (prev) {\n      prev.pop();\n      return prev;\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: wrapperStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, content.map(function (_, i) {\n    return _react.default.createElement(_react.default.Fragment, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, i !== 0 && _react.default.createElement(_reactNative.View, {\n      style: {\n        flex: 1,\n        height: 1,\n        backgroundColor: 'grey',\n        opacity: 1,\n        marginHorizontal: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), _react.default.createElement(_reactNative.View, {\n      style: [{\n        backgroundColor: '#1976d2',\n        width: 30,\n        height: 30,\n        borderRadius: 30,\n        justifyContent: 'center',\n        alignItems: 'center',\n        opacity: search(i, step) ? 1 : 0.3\n      }, stepStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, search(i, step) ? _react.default.createElement(_reactNative.Text, {\n      style: [{\n        color: 'white'\n      }, stepTextStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \"\\u2713\") : _react.default.createElement(_reactNative.Text, {\n      style: [{\n        color: 'white'\n      }, stepTextStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, i + 1)));\n  })), _react.default.createElement(_reactNative.ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, content[active]), showButton && _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, active !== 0 && _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [{\n      padding: 10,\n      borderRadius: 4,\n      alignSelf: 'flex-start',\n      marginRight: 10\n    }, buttonStyle, {\n      backgroundColor: '#a1a1a1'\n    }],\n    onPress: function onPress() {\n      removeData();\n      onBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [{\n      color: 'white'\n    }, buttonTextStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Back\")), content.length - 1 !== active && _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [{\n      padding: 10,\n      borderRadius: 4,\n      backgroundColor: '#1976d2',\n      alignSelf: 'flex-start',\n      marginRight: 10\n    }, buttonStyle],\n    onPress: function onPress() {\n      pushData(active + 1);\n      onNext();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [{\n      color: 'white'\n    }, buttonTextStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"Next\")), content.length - 1 === active && _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [{\n      padding: 10,\n      borderRadius: 4,\n      backgroundColor: '#1976d2',\n      alignSelf: 'flex-start'\n    }, buttonStyle],\n    onPress: function onPress() {\n      return onFinish();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [{\n      color: 'white'\n    }, buttonTextStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Finish\"))));\n};\n\nvar _default = Stepper;\nexports.default = _default;","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/node_modules/react-native-stepper-ui/index.tsx"],"names":["search","keyName","myArray","value","map","val","Stepper","props","active","content","onBack","onNext","onFinish","wrapperStyle","stepStyle","stepTextStyle","buttonStyle","buttonTextStyle","showButton","step","setStep","pushData","prev","removeData","pop","flexDirection","justifyContent","alignItems","_","i","flex","height","backgroundColor","opacity","marginHorizontal","width","borderRadius","color","padding","alignSelf","marginRight","length"],"mappings":"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","sourcesContent":["import React, {FC, useState, ReactElement} from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ViewStyle,\n  TextStyle,\n  ScrollView,\n} from 'react-native';\n\nexport interface StepperProps {\n  active: number;\n  content: ReactElement[];\n  onNext: Function;\n  onBack: Function;\n  onFinish: Function;\n  wrapperStyle?: ViewStyle;\n  stepStyle?: ViewStyle;\n  stepTextStyle?: TextStyle;\n  buttonStyle?: ViewStyle;\n  buttonTextStyle?: TextStyle;\n  showButton?: boolean;\n}\n\nconst search = (keyName: number, myArray: number[]): boolean => {\n  let value = false;\n  myArray.map((val) => {\n    if (val === keyName) {\n      value = true;\n    }\n  });\n  return value;\n};\n\nconst Stepper: FC<StepperProps> = (props) => {\n  const {\n    active,\n    content,\n    onBack,\n    onNext,\n    onFinish,\n    wrapperStyle,\n    stepStyle,\n    stepTextStyle,\n    buttonStyle,\n    buttonTextStyle,\n    showButton = true,\n  } = props;\n  const [step, setStep] = useState<number[]>([0]);\n  const pushData = (val: number) => {\n    setStep((prev) => [...prev, val]);\n  };\n\n  const removeData = () => {\n    setStep((prev) => {\n      prev.pop();\n      return prev;\n    });\n  };\n  return (\n    <View style={wrapperStyle}>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        {content.map((_, i) => {\n          return (\n            <React.Fragment key={i}>\n              {i !== 0 && (\n                <View\n                  style={{\n                    flex: 1,\n                    height: 1,\n                    backgroundColor: 'grey',\n                    opacity: 1,\n                    marginHorizontal: 10,\n                  }}\n                />\n              )}\n              <View\n                style={[\n                  {\n                    backgroundColor: '#1976d2',\n                    width: 30,\n                    height: 30,\n                    borderRadius: 30,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    opacity: search(i, step) ? 1 : 0.3,\n                  },\n                  stepStyle,\n                ]}>\n                {search(i, step) ? (\n                  <Text\n                    style={[\n                      {\n                        color: 'white',\n                      },\n                      stepTextStyle,\n                    ]}>\n                    &#10003;\n                  </Text>\n                ) : (\n                  <Text\n                    style={[\n                      {\n                        color: 'white',\n                      },\n                      stepTextStyle,\n                    ]}>\n                    {i + 1}\n                  </Text>\n                )}\n              </View>\n            </React.Fragment>\n          );\n        })}\n      </View>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {content[active]}\n      </ScrollView>\n      {showButton && (\n        <View\n          style={{\n            flexDirection: 'row',\n          }}>\n          {active !== 0 && (\n            <TouchableOpacity\n              style={[\n                {\n                  padding: 10,\n                  borderRadius: 4,\n                  alignSelf: 'flex-start',\n                  marginRight: 10,\n                },\n                buttonStyle,\n                {\n                  backgroundColor: '#a1a1a1',\n                },\n              ]}\n              onPress={() => {\n                removeData();\n                onBack();\n              }}>\n              <Text style={[{color: 'white'}, buttonTextStyle]}>Back</Text>\n            </TouchableOpacity>\n          )}\n          {content.length - 1 !== active && (\n            <TouchableOpacity\n              style={[\n                {\n                  padding: 10,\n                  borderRadius: 4,\n                  backgroundColor: '#1976d2',\n                  alignSelf: 'flex-start',\n                  marginRight: 10,\n                },\n                buttonStyle,\n              ]}\n              onPress={() => {\n                pushData(active + 1);\n                onNext();\n              }}>\n              <Text style={[{color: 'white'}, buttonTextStyle]}>Next</Text>\n            </TouchableOpacity>\n          )}\n          {content.length - 1 === active && (\n            <TouchableOpacity\n              style={[\n                {\n                  padding: 10,\n                  borderRadius: 4,\n                  backgroundColor: '#1976d2',\n                  alignSelf: 'flex-start',\n                },\n                buttonStyle,\n              ]}\n              onPress={() => onFinish()}>\n              <Text style={[{color: 'white'}, buttonTextStyle]}>Finish</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default Stepper;\n"]},"metadata":{},"sourceType":"script"}