{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _appColors = require(\"../utils/appColors\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityaarirvan/Desktop/expo app/modified app/app/components/Divider.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Divider = function Divider(_ref) {\n  var inset = _ref.inset,\n      style = _ref.style,\n      isDark = _ref.isDark,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"inset\", \"style\", \"isDark\"]);\n  return React.createElement(_reactNative.View, (0, _extends2.default)({}, rest, {\n    style: [isDark ? styles.dark : styles.light, inset && styles.inset, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  light: {\n    backgroundColor: (0, _color.default)(_appColors.appColors.white).alpha(0.2).rgb().string(),\n    height: _reactNative.StyleSheet.hairlineWidth\n  },\n  dark: {\n    backgroundColor: (0, _color.default)(_appColors.appColors.black).alpha(0.2).rgb().string(),\n    height: _reactNative.StyleSheet.hairlineWidth\n  },\n  inset: {\n    marginLeft: 72\n  }\n});\n\nvar _default = Divider;\nexports.default = _default;","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/app/components/Divider.js"],"names":["Divider","inset","style","isDark","rest","styles","dark","light","StyleSheet","create","backgroundColor","appColors","white","alpha","rgb","string","height","hairlineWidth","black","marginLeft"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;AA+BA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAsC;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAXC,IAAW;AACpD,SACE,oBAAC,iBAAD,6BACMA,IADN;AAEE,IAAA,KAAK,EAAE,CACLD,MAAM,GAAGE,MAAM,CAACC,IAAV,GAAiBD,MAAM,CAACE,KADzB,EAELN,KAAK,IAAII,MAAM,CAACJ,KAFX,EAGLC,KAHK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD,CAXD;;AAaA,IAAMG,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,KAAK,EAAE;AACLG,IAAAA,eAAe,EAAE,oBAAMC,qBAAUC,KAAhB,EAAuBC,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,GAAwCC,MAAxC,EADZ;AAELC,IAAAA,MAAM,EAAER,wBAAWS;AAFd,GADwB;AAK/BX,EAAAA,IAAI,EAAE;AACJI,IAAAA,eAAe,EAAE,oBAAMC,qBAAUO,KAAhB,EAAuBL,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,GAAwCC,MAAxC,EADb;AAEJC,IAAAA,MAAM,EAAER,wBAAWS;AAFf,GALyB;AAS/BhB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,UAAU,EAAE;AADP;AATwB,CAAlB,CAAf;;eAcenB,O","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, } from 'react-native';\nimport { appColors } from '../utils/appColors';\n\n\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({ inset, style, isDark,...rest }) => {\n  return (\n    <View\n      {...rest}\n      style={[\n        isDark ? styles.dark : styles.light,\n        inset && styles.inset,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(appColors.white).alpha(0.2).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(appColors.black).alpha(0.2).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default Divider"]},"metadata":{},"sourceType":"script"}