{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.workerGetError = workerGetError;\nexports.watcherGetError = watcherGetError;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _actionTypes = require(\"../actionTypes\");\n\nvar _marked = _regenerator.default.mark(workerGetError),\n    _marked2 = _regenerator.default.mark(watcherGetError);\n\nfunction workerGetError(action) {\n  var error;\n  return _regenerator.default.wrap(function workerGetError$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!action) {\n            _context.next = 4;\n            break;\n          }\n\n          error = action.payload.error;\n          _context.next = 4;\n          return (0, _effects.put)({\n            type: \"SET_ERROR_SUCCESS\",\n            payload: error\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction watcherGetError() {\n  return _regenerator.default.wrap(function watcherGetError$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeLatest)(_actionTypes.SET_ERROR, workerGetError);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/adityaarirvan/Desktop/expo app/modified app/app/redux/saga/errorSaga.js"],"names":["workerGetError","watcherGetError","action","error","payload","type","SET_ERROR"],"mappings":";;;;;;;;;;AAAA;;AACA;;wCACiBA,c;yCAOAC,e;;AAPV,SAAUD,cAAV,CAAyBE,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACDA,MADC;AAAA;AAAA;AAAA;;AAEMC,UAAAA,KAFN,GAEaD,MAAM,CAACE,OAFpB,CAEMD,KAFN;AAAA;AAIH,iBAAM,kBAAI;AAAEE,YAAAA,IAAI,EAAE,mBAAR;AAA6BD,YAAAA,OAAO,EAAED;AAAtC,WAAJ,CAAN;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUF,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAM,yBAAWK,sBAAX,EAAqBN,cAArB,CAAN;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects'\nimport {  SET_ERROR } from '../actionTypes';\nexport function* workerGetError(action) {\n  if (action) {\n      const {error}=action.payload\n  \n    yield put({ type: \"SET_ERROR_SUCCESS\", payload: error })\n  }\n}\nexport function* watcherGetError() {\n  yield takeLatest(SET_ERROR,workerGetError)\n}"]},"metadata":{},"sourceType":"script"}